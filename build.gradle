buildscript {
    ext.kotlin_version = '1.7.22'
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven {
            url 'https://repo.spongepowered.org/maven' /* Sponge */
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.7.22"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


version = 'VERSION-1.0'
group = 'idk.bluecross.fhax16'
archivesBaseName = 'fhax16'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

minecraft {
//    mappings channel: 'official', version: '1.16.5'
    mappings channel: 'snapshot', version: '20210309-1.16.5'
    accessTransformer = file('src/main/resources/META-INF/fhax_at.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=fhax16.mixins.json'
            arg '--username=Bluecross'
            mods {
                fhax16 {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                fhax16 {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'
    shadow 'org.reflections:reflections:0.10.2'
    shadow("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version") {
        exclude module: 'kotlin-stdlib-common'
        exclude module: 'annotations'
    }
    shadow('org.jetbrains.kotlin:kotlin-reflect:1.7.22') {
        exclude module: 'kotlin-stdlib'
    }
    shadow('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4') {
        exclude module: 'kotlin-stdlib-jdk8'
        exclude module: 'kotlin-stdlib-common'
    }
    shadow('org.spongepowered:mixin:0.8.5') {
        exclude module: 'commons-io'
        exclude module: 'gson'
        exclude module: 'guava'
    }
    annotationProcessor('org.spongepowered:mixin:0.8.5:processor') {
        exclude module: 'gson'
    }
    shadow 'com.fasterxml.jackson.core:jackson-core:2.14.0'
    shadow 'com.fasterxml.jackson.core:jackson-databind:2.14.0'
    shadow 'com.fasterxml.jackson.core:jackson-annotations:2.14.0'

    implementation configurations.shadow
}

shadowJar {
    classifier 'readyToGo'

    manifest {
        attributes([
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "fhax16",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),

                "TweakClass"              : "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder"              : 0,
                "MixinConfigs"            : "fhax16.mixins.json",
                'FMLAT'                   : 'fhax_at.cfg'
        ])
    }

    //project.configurations.shadow.setTransitive(true)
    configurations = [project.configurations.shadow]
    exclude 'DebugProbesKt.bin'
    exclude 'LICENSE.txt'
    exclude 'dummyThing'
    exclude '**/module-info.class',
            'DebugProbesKt.bin',
            'META-INF/proguard/**',
            'META-INF/versions/**',
            'META-INF/**.RSA',
            'META-INF/com.android.tools/**',
            'META-INF/*.kotlin_module',
            'kotlin/**/*.kotlin_metadata',
            'kotlin/**/*.kotlin_builtins',
            'META-INF/*.version',
            'META-INF/LICENSE',
            'META-INF/NOTICE',
            'META-INF/services/cpw.mods.modlauncher.api.ITransformationService'
    // <----- idk why but forge dont detect mod without deleting this shit

    finalizedBy('reobfShadowJar')
}

assemble.dependsOn shadowJar

reobf {
    shadowJar {}
    jar {
        enabled = false
    }
}

mixin {
    sourceSets {
        main {
            ext.refMap = "fhax16.mixins.refmap.json"
        }
    }
}

repositories {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven {
            url 'https://repo.spongepowered.org/maven' /* Sponge */
        }
        mavenCentral()
    }
    mavenCentral()
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
